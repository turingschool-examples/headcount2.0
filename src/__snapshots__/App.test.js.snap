// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`App matches the snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <App />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <h1
          className="headerTitle"
>
          HeadCount 2.0
</h1>,
        <div
          className="searchContainer"
>
          <Search
                    updateCards={[Function]}
          />
</div>,
        <div
          className="topContainer"
>
          <ComparedContainer
                    compareObject={Object {}}
          />
          <CardContainer
                    className="bottomContainer"
                    data={Array []}
                    selectCards={[Function]}
          />
</div>,
        <CardContainer
          data={Array []}
          selectCards={[Function]}
          selected={false}
/>,
      ],
      "className": "headerContainer",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "HeadCount 2.0",
          "className": "headerTitle",
        },
        "ref": null,
        "rendered": "HeadCount 2.0",
        "type": "h1",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <Search
            updateCards={[Function]}
/>,
          "className": "searchContainer",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "updateCards": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <ComparedContainer
              compareObject={Object {}}
/>,
            <CardContainer
              className="bottomContainer"
              data={Array []}
              selectCards={[Function]}
/>,
          ],
          "className": "topContainer",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "compareObject": Object {},
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "className": "bottomContainer",
              "data": Array [],
              "selectCards": [Function],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "data": Array [],
          "selectCards": [Function],
          "selected": false,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <h1
            className="headerTitle"
>
            HeadCount 2.0
</h1>,
          <div
            className="searchContainer"
>
            <Search
                        updateCards={[Function]}
            />
</div>,
          <div
            className="topContainer"
>
            <ComparedContainer
                        compareObject={Object {}}
            />
            <CardContainer
                        className="bottomContainer"
                        data={Array []}
                        selectCards={[Function]}
            />
</div>,
          <CardContainer
            data={Array []}
            selectCards={[Function]}
            selected={false}
/>,
        ],
        "className": "headerContainer",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "HeadCount 2.0",
            "className": "headerTitle",
          },
          "ref": null,
          "rendered": "HeadCount 2.0",
          "type": "h1",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <Search
              updateCards={[Function]}
/>,
            "className": "searchContainer",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "updateCards": [Function],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <ComparedContainer
                compareObject={Object {}}
/>,
              <CardContainer
                className="bottomContainer"
                data={Array []}
                selectCards={[Function]}
/>,
            ],
            "className": "topContainer",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "compareObject": Object {},
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "className": "bottomContainer",
                "data": Array [],
                "selectCards": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "data": Array [],
            "selectCards": [Function],
            "selected": false,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getSnapshotBeforeUpdate": true,
        },
      },
    },
    "attachTo": undefined,
    "disableLifecycleMethods": true,
    "hydrateIn": undefined,
  },
}
`;
